version: '3.8'
services:
  api:
    container_name: sites_text_validator__api
    build:
      context: .
      dockerfile: docker/api/Dockerfile
    restart: always
    env_file:
      - .env
    depends_on:
      - postgres
      - migrations
      - selenoid
      - redis
    volumes:
      - ${LOGGER_DIR_PATH}:${LOGGER_DIR_PATH_INTERNAL}
    ports:
      - ${API_SERVER_PORT}:5000
    command: [
      "poetry", "run", "uvicorn", "app:create_app",
      "--host", "0.0.0.0",
      "--port", '5000'
    ]

  postgres:
    container_name: sites_text_validator__postgres
    image: "postgres:13.1"
    restart: always
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - ${POSTGRES_EXT_PORT}:5432
    volumes:
      - ${POSTGRES_DATA_VOLUME}:/var/lib/postgresql/data/pgdata
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 10s
      retries: 5

  migrations:
    container_name: sites_text_validator__migrations
    build:
      context: .
      dockerfile: docker/migrations/Dockerfile
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    command: [
        "poetry", "run", "python", "-m", "scripts.migrate"
    ]

  selenoid:
    container_name: sites_text_validator__selenoid
    image: "seleniarm/standalone-chromium:108.0"
    restart: always
    privileged: true
    shm_size: 2g
    env_file:
      - .env
    ports:
      - "${SELENIUM_EXT_PORT}:4444"

  redis:
    image: "redis:latest"
    container_name: sites_text_validator__redis
    restart: always
    volumes:
      - ${REDIS_DATA_VOLUME}:/redis-data:/data

  celery_worker:
    container_name: sites_text_validator__celery_worker
    build:
      context: .
      dockerfile: docker/api/Dockerfile
    env_file:
      - .env
    command: ["celery", "-A", "app.internal.workers.celery_worker.celery", "worker", "--loglevel=INFO", "--autoscale=${AUTO_SCALING_MAX_WORKERS},${AUTO_SCALING_MIN_WORKERS}"]
    depends_on:
      - selenoid
      - redis
      - api

  celery_beat:
    container_name: sites_text_validator__celery_beat
    build:
      context: .
      dockerfile: docker/api/Dockerfile
    env_file:
      - .env
    command: ["celery", "-A", "app.internal.workers.celery_worker.celery", "beat", "--loglevel=INFO", "--max-interval=${MAX_INTERVAL_BEAT}"]
    depends_on:
      - selenoid
      - redis
      - celery_worker
      - api


networks:
  default:
    name: shared-network
    external: true
